name: CI â€¢ test, build & push image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write        # required to push to GHCR
  id-token: write

env:
  IMAGE_NAME: degree-flowchart

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Ensure mvnw is runnable on Linux
        run: |
          # strip any Windows CRLF just in case
          sed -i 's/\r$//' mvnw
          # set executable bit for this runner
          chmod +x mvnw
          # show what it is now
          ls -l mvnw

      - name: Run unit tests
        run: ./mvnw -B -ntp test

      # optional: always upload surefire reports if tests fail
      - name: Upload surefire reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/**

      - name: Compute lowercase owner for GHCR path
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (only on main)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Trigger Render deploy (after push)
        if: github.ref == 'refs/heads/main' && secrets.RENDER_DEPLOY_HOOK != ''
        run: curl -fsSL "${{ secrets.RENDER_DEPLOY_HOOK }}"
